0: INCONDITIONAL
1: CONDITIONAL_DOUBLE
was label
2: CONDITIONAL_SIMPLE
was label
3: Type NOJUMP
was label
4: Type RET
was label
Instructions:
 opcode: jmp l1 position0
 label: l1 opcode: jeq l2true l2false position1
 label: l2true opcode: jeq l3true position2
 label: l3true opcode: ldh position3
 label: l2false opcode: ret position4
Labels:
 label: l1 opcode: jeq l2true l2false position1
 label: l2false opcode: ret position4
 label: l2true opcode: jeq l3true position2
 label: l3true opcode: ldh position3
Labels:
 label: l1 opcode: jeq l2true l2false position1
 label: l2false opcode: ret position4
 label: l2true opcode: jeq l3true position2
 label: l3true opcode: ldh position3
Stack:

Size of stack:0 Instruction:  opcode: jmp l1 position0
INC+COND_DOUBLE. PUSH: 
 label: l1 opcode: jeq l2true l2false position1

Size of stack:0 Instruction:  label: l1 opcode: jeq l2true l2false position1
INC+COND_DOUBLE. PUSH: 
 label: l2true opcode: jeq l3true position2
 label: l2false opcode: ret position4

Size of stack:1 Instruction:  label: l2false opcode: ret position4
RET

Size of stack:0 Instruction:  label: l2true opcode: jeq l3true position2
SIMPLE. PUSH: 
 label: l3true opcode: ldh position3
NOJUMP. PUSH: 2
 label: l3true opcode: ldh position3

Size of stack:1 Instruction:  label: l3true opcode: ldh position3
NOJUMP. PUSH: 3
 label: l2false opcode: ret position4

Size of stack:1 Instruction:  label: l2false opcode: ret position4
RET

Size of stack:0 Instruction:  label: l3true opcode: ldh position3
NOJUMP. PUSH: 3
 label: l2false opcode: ret position4

Size of stack:0 Instruction:  label: l2false opcode: ret position4
RET
