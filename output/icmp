0: Type NOJUMP
1: CONDITIONAL_SIMPLE
2: Type NOJUMP
3: CONDITIONAL_SIMPLE
4: Type NOJUMP
5: Type NOJUMP
6: CONDITIONAL_SIMPLE
7: Type RET
8: Type RET
was label
Instructions:
 opcode: ldh position0
 opcode: jne drop position1
 opcode: ldb position2
 opcode: jneq drop position3
 opcode: ld position4
 opcode: mod position5
 opcode: jneq drop position6
 opcode: ret position7
 label: drop opcode: ret position8
Labels:
 label: drop opcode: ret position8
Labels:
 label: drop opcode: ret position8
Stack:

Size of stack:0 Instruction:  opcode: ldh position0
NOJUMP. PUSH: 0
 opcode: jne drop position1

Size of stack:0 Instruction:  opcode: jne drop position1
SIMPLE. PUSH: 
 label: drop opcode: ret position8
NOJUMP. PUSH: 1
 opcode: ldb position2

Size of stack:1 Instruction:  opcode: ldb position2
NOJUMP. PUSH: 2
 opcode: jneq drop position3

Size of stack:1 Instruction:  opcode: jneq drop position3
SIMPLE. PUSH: 
 label: drop opcode: ret position8
NOJUMP. PUSH: 3
 opcode: ld position4

Size of stack:2 Instruction:  opcode: ld position4
NOJUMP. PUSH: 4
 opcode: mod position5

Size of stack:2 Instruction:  opcode: mod position5
NOJUMP. PUSH: 5
 opcode: jneq drop position6

Size of stack:2 Instruction:  opcode: jneq drop position6
SIMPLE. PUSH: 
 label: drop opcode: ret position8
NOJUMP. PUSH: 6
 opcode: ret position7

Size of stack:3 Instruction:  opcode: ret position7
RET

Size of stack:2 Instruction:  label: drop opcode: ret position8
RET

Size of stack:1 Instruction:  label: drop opcode: ret position8
RET

Size of stack:0 Instruction:  label: drop opcode: ret position8
RET
