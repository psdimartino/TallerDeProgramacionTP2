0: Type NOJUMP
1: CONDITIONAL_SIMPLE
2: Type NOJUMP
3: CONDITIONAL_SIMPLE
4: CONDITIONAL_SIMPLE
5: CONDITIONAL_SIMPLE
6: CONDITIONAL_SIMPLE
7: CONDITIONAL_SIMPLE
8: CONDITIONAL_SIMPLE
9: CONDITIONAL_SIMPLE
10: CONDITIONAL_SIMPLE
11: CONDITIONAL_SIMPLE
12: CONDITIONAL_SIMPLE
13: Type RET
was label
14: Type RET
was label
Instructions:
 opcode: ld position0
 opcode: jne bad position1
 opcode: ld position2
 opcode: jeq good position3
 opcode: jeq good position4
 opcode: jeq good position5
 opcode: jeq good position6
 opcode: jeq good position7
 opcode: jeq good position8
 opcode: jeq good position9
 opcode: jeq good position10
 opcode: jeq good position11
 opcode: jeq good position12
 label: bad opcode: ret position13
 label: good opcode: ret position14
Labels:
 label: bad opcode: ret position13
 label: good opcode: ret position14
Labels:
 label: bad opcode: ret position13
 label: good opcode: ret position14
Stack:

Size of stack:0 Instruction:  opcode: ld position0
NOJUMP. PUSH: 0
 opcode: jne bad position1

Size of stack:0 Instruction:  opcode: jne bad position1
SIMPLE. PUSH: 
 label: bad opcode: ret position13
NOJUMP. PUSH: 1
 opcode: ld position2

Size of stack:1 Instruction:  opcode: ld position2
NOJUMP. PUSH: 2
 opcode: jeq good position3

Size of stack:1 Instruction:  opcode: jeq good position3
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 3
 opcode: jeq good position4

Size of stack:2 Instruction:  opcode: jeq good position4
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 4
 opcode: jeq good position5

Size of stack:3 Instruction:  opcode: jeq good position5
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 5
 opcode: jeq good position6

Size of stack:4 Instruction:  opcode: jeq good position6
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 6
 opcode: jeq good position7

Size of stack:5 Instruction:  opcode: jeq good position7
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 7
 opcode: jeq good position8

Size of stack:6 Instruction:  opcode: jeq good position8
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 8
 opcode: jeq good position9

Size of stack:7 Instruction:  opcode: jeq good position9
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 9
 opcode: jeq good position10

Size of stack:8 Instruction:  opcode: jeq good position10
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 10
 opcode: jeq good position11

Size of stack:9 Instruction:  opcode: jeq good position11
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 11
 opcode: jeq good position12

Size of stack:10 Instruction:  opcode: jeq good position12
SIMPLE. PUSH: 
 label: good opcode: ret position14
NOJUMP. PUSH: 12
 label: bad opcode: ret position13

Size of stack:11 Instruction:  label: bad opcode: ret position13
RET

Size of stack:10 Instruction:  label: good opcode: ret position14
RET

Size of stack:9 Instruction:  label: good opcode: ret position14
RET

Size of stack:8 Instruction:  label: good opcode: ret position14
RET

Size of stack:7 Instruction:  label: good opcode: ret position14
RET

Size of stack:6 Instruction:  label: good opcode: ret position14
RET

Size of stack:5 Instruction:  label: good opcode: ret position14
RET

Size of stack:4 Instruction:  label: good opcode: ret position14
RET

Size of stack:3 Instruction:  label: good opcode: ret position14
RET

Size of stack:2 Instruction:  label: good opcode: ret position14
RET

Size of stack:1 Instruction:  label: good opcode: ret position14
RET

Size of stack:0 Instruction:  label: bad opcode: ret position13
RET
